@page "/login"
@inject NavigationManager UriHelper
@inject CurrencyExchangerService CurrencyExchangerService
<div class="row center" style="width:300px;">
        <div class="card  darken-1">
        <span class="card-title">Login</span>
            <div class="row">                 
                    <div class="row">
                        <div class="input-field col s12">
                            <i class="material-icons prefix">account_circle</i>
                        <input id="icon_prefix" @bind="UserLogin.identifier" type="text" class="validate">
                            <label for="icon_prefix">Username</label>
                        </div>
                        <div class="input-field col s12">
                            <i class="material-icons prefix">password</i>
                            <input id="icon_username" @bind="UserLogin.password" type="password" class="validate">
                            <label for="icon_username">Password</label>
                        </div>
                    </div>                
            </div>
        <div class="row" style="visibility:@(LoginError == false? "hidden":"visible");">
                <span style="color:red;">Invalid Login Data</span>
            </div>
            <div class="card-action">
            <button @onclick="OnClick"  class="btn-large waves-effect waves-light orange">Login</button>
            </div>
        </div>   
</div>
@code {
    private bool LoginError = false;
    public UserLogin  UserLogin = new  UserLogin();
    private async void OnClick()
    {
        try {
            await CurrencyExchangerService.LoginAsync(UserLogin);
            UriHelper.NavigateTo("/");
        }
        catch(HttpRequestException ex)
        {
            LoginError = true;
            StateHasChanged();
        }


    }
}
