@page "/register"
@inject CurrencyExchangerService CurrencyExchangerService
<div class="row center" style="width:300px;">
    <div class="card  darken-1">
        <span class="card-title">Login</span>
        <div class="row">
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">account_circle</i>
                    <input id="icon_username" @bind="UserRegisterationData.username" type="text" class="validate">
                    <label for="icon_username">Username</label>
                </div>
                <div class="input-field col s12">
                    <i class="material-icons prefix">email</i>
                    <input id="icon_email" @bind="UserRegisterationData.email" type="email" class="validate">
                    <label for="icon_email">Email</label>
                </div>
                <div class="input-field col s12">
                    <i class="material-icons prefix">password</i>
                    <input id="icon_username" @bind="UserRegisterationData.password" type="password" class="validate">
                    <label for="icon_username">Password</label>
                </div>
            </div>
        </div>
        <div class="card-action">
            <button @onclick="OnClick" class="btn-large waves-effect waves-light orange">Register</button>
        </div>
    </div>
</div>
@code {
    public UserRegisterationData UserRegisterationData = new UserRegisterationData();
    private async void OnClick()
    {
        await CurrencyExchangerService.RegisterAsync(UserRegisterationData);
    }
}
